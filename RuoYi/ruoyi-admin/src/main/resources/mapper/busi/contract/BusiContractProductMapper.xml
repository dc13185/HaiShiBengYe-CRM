<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.ruoyi.busi.contract.mapper.BusiContractProductMapper">

    <resultMap type="BusiContractProduct" id="BusiContractProductResult">
        <result property="product"    column="product"    />
        <result property="type"    column="type"    />
        <result property="productName"    column="product_name"    />
        <result property="productPrice"    column="product_price"    />
        <result property="productNumber"    column="product_number"    />
        <result property="contractId"    column="contract_id"    />
    </resultMap>

    <sql id="selectBusiContractProductVo">
        select product, product_name, product_price, product_number, contract_id ,type from busi_contract_product
    </sql>

    <select id="selectBusiContractProductList" parameterType="BusiContractProduct" resultMap="BusiContractProductResult">
        <include refid="selectBusiContractProductVo"/>
        <where>
            <if test="productName != null  and productName != ''"> and product_name like concat('%', #{productName}, '%')</if>
            <if test="productPrice != null "> and product_price = #{productPrice}</if>
            <if test="productNumber != null "> and product_number = #{productNumber}</if>
            <if test="contractId != null "> and contract_id = #{contractId}</if>
        </where>
    </select>

    <select id="selectBusiContractProductById" parameterType="Long" resultMap="BusiContractProductResult">
        <include refid="selectBusiContractProductVo"/>
        where product = #{product}
    </select>

    <insert id="insertBusiContractProduct" parameterType="BusiContractProduct" useGeneratedKeys="true" keyProperty="product">
        insert into busi_contract_product
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="productName != null">product_name,</if>
            <if test="productPrice != null">product_price,</if>
            <if test="productNumber != null">product_number,</if>
            <if test="contractId != null">contract_id,</if>
            <if test="type != null">type,</if>
         </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="productName != null">#{productName},</if>
            <if test="productPrice != null">#{productPrice},</if>
            <if test="productNumber != null">#{productNumber},</if>
            <if test="contractId != null">#{contractId},</if>
            <if test="type != null">#{type},</if>
         </trim>
    </insert>

    <update id="updateBusiContractProduct" parameterType="BusiContractProduct">
        update busi_contract_product
        <trim prefix="SET" suffixOverrides=",">
            <if test="productName != null">product_name = #{productName},</if>
            <if test="productPrice != null">product_price = #{productPrice},</if>
            <if test="productNumber != null">product_number = #{productNumber},</if>
            <if test="contractId != null">contract_id = #{contractId},</if>
            <if test="type != null">type = #{type},</if>
        </trim>
        where product = #{product}
    </update>

    <delete id="deleteBusiContractProductById" parameterType="Long">
        delete from busi_contract_product where product = #{product}
    </delete>

    <delete id="deleteBusiContractProductByIds" parameterType="String">
        delete from busi_contract_product where product in
        <foreach item="product" collection="array" open="(" separator="," close=")">
            #{product}
        </foreach>
    </delete>

</mapper>
